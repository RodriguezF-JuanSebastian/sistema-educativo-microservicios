# Nombre del workflow que aparecerá en GitHub Actions
name: Maven CI Pipeline

# Este pipeline se ejecuta automáticamente cuando se hace push o pull request a la rama main
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

# Definición del job principal de construcción
jobs:
  build:
    # Se ejecuta en un contenedor de Ubuntu (máquina virtual ligera proporcionada por GitHub)
    runs-on: ubuntu-latest

    # Estrategia para correr este job con diferentes servicios
    # Aquí indicamos los nombres de las carpetas de cada microservicio
    strategy:
      matrix:
        service: [usuarios-servicio, asignaturas-servicio, matriculas-servicio]

    steps:
      # Paso 1: Clona el repositorio dentro del entorno de GitHub Actions
      - name: Checkout repository
        uses: actions/checkout@v4

      # Paso 2: Instala Java JDK 17 para compilar proyectos Java
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'   # Distribución OpenJDK recomendada
          java-version: '17'        # Versión requerida para el proyecto

      # Paso 3: Se mueve a la carpeta de cada microservicio y ejecuta el build con Maven
      - name: Build and Test ${{ matrix.service }}
        # Cambia el directorio de trabajo al microservicio actual
        working-directory: ${{ matrix.service }}
        # Ejecuta el comando de Maven para compilar y correr pruebas
        run: mvn clean install
